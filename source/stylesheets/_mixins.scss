@mixin media($media-query) {
    @media (min-width: #{$media-query}) {
        @content;
    }
}

@function strip-units($value) {
    @return ($value / ($value * 0 + 1));
}

$em-base: 16px;

@function em($pxval, $base: $em-base) {
    @if not unitless($pxval) {
        $pxval: strip-units($pxval);
    }
    @if not unitless($base) {
        $base: strip-units($base);
    }
    @return ($pxval / $base) * 1em;
}

@mixin screensize($screen-size, $screen-name, $size-px, $color) {
    @media (min-width: $screen-size) {
        body[data-env="dev"] {
            .breakpoints {
                font-size: 13px;
                width: 100%;
                height: 15px;
                position: fixed;
                top: 0;
                text-align: center;
                z-index: 100000;
                background-color: $color;
                opacity: .2;

                &:hover {
                    opacity: 1;
                }

                &::before {
                    display: block;
                    content: $screen-name + ': ' + $size-px;
                    text-shadow: -1px 1px 0px white;
                    color: black;
                }
            }
        }
    }
}

@mixin windows-borders {
    background: $window-gray;
    border-top: 1px solid $window-gray-light;
    border-left: 1px solid $window-gray-light;
    border-right: 1px solid #000;
    border-bottom: 1px solid #000;
    box-shadow: inset -1px -1px 0 0 $window-gray-dark, inset 1px 1px 0 0px #fff, 0px 0px 2px 1px rgba(0,0,0,0.3);
    padding: 2px;

    &:hover {
        box-shadow: inset -1px -1px 0 0 $window-gray-dark, inset 1px 1px 0 0px #fff, 0px 0px 15px 1px rgba(0,0,0,0.5);
    }
}

@mixin inset-border {
    border-top: 1px solid $window-gray-dark;
    border-left: 1px solid $window-gray-dark;

    border-right: 1px solid #fff;
    border-bottom: 1px solid #fff;
}